worker_processes 1;
events {
    worker_connections 1024;
}
http {
    resolver 127.0.0.11 valid=30s;
    server {
        listen 8082;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;
        include /etc/nginx/mime.types;
        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /health
        {
            return 200 '{"message": "healthy"}';
            add_header Content-Type application/json;
        }

        location /server_name {

            set $cors '';
            if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
                    set $cors 'true';
            }

            if ($cors = 'true') {
                    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With, X-Access-Token' always;
                    # required to be able to read Authorization header in frontend
                    #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            }

            if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                    # Tell client that this pre-flight info is valid for 20 days
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    add_header 'Access-Control-Allow-Headers' 'OPTIONS,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type, X-Access-Token';
                    return 204;
            }
            

           rewrite /server_name/(.*) /$1 break;
           proxy_pass https://www.blooket.com/;
           proxy_set_header Origin "";
           proxy_set_header Connection "upgrade";
           proxy_read_timeout 86400;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;

        }

        
    }
}
